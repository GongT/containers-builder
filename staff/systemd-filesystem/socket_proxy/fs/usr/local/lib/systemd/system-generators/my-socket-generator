#!/bin/bash
set -Eeuo pipefail

declare -r TARGET_DIR="${3-/tmp}" SOURCE_DIR="/etc/systemd/my/sockets"
WHO_AM_I=$(realpath "${BASH_SOURCE[0]}")

function add_dep() {
	local -r UNIT_NAME=$1 TYPE=$2
	shift 2

	local -r DEP_DIR="${TARGET_DIR}/${UNIT_NAME}.${TYPE}"
	mkdir -p "${DEP_DIR}"

	local UNIT FILE
	for UNIT in "$@"; do
		FILE="${TARGET_DIR}/${UNIT}"
		ln -s "${FILE}" "${DEP_DIR}"
	done
}

if [[ ! -d ${SOURCE_DIR} ]]; then
	echo "missing sockets define directory: ${SOURCE_DIR}" >/dev/kmsg
	exit 0
fi

echo " ** my-socket-generator **" >/dev/kmsg
echo "PROJECT_NAME=${PROJECT_NAME}" >/dev/kmsg
for CONFIG_FILE in "${SOURCE_DIR}/"*; do
	declare PROTO PORT NAME
	source "${CONFIG_FILE}"
	if [[ -z ${NAME} ]]; then
		FNAME="${PROJECT_NAME}"
	else
		FNAME="${PROJECT_NAME}.${NAME}"
	fi

	SERVICE_NAME="proxy-to-${PROTO}-${PORT}.service"

	if [[ ${PROTO} == "udp" ]]; then
		LISTEN_NAME="ListenDatagram"
	else
		LISTEN_NAME="ListenStream"
	fi

	cat >"${TARGET_DIR}/${FNAME}.socket" <<-EOF
		# This file is generated by ${WHO_AM_I}
		[Unit]
		SourcePath=${CONFIG_FILE}
		Description=proxy socket at /run/sockets/${FNAME}.sock to ${PORT}/${PROTO}
		FailureAction=exit
		FailureActionExitStatus=233
		Before=success.service

		[Install]
		WantedBy=sockets.target
		RequiredBy=success.service

		[Socket]
		${LISTEN_NAME}=/run/sockets/${FNAME}.sock
		Service=${SERVICE_NAME}
	EOF
	cat >"/etc/systemd/system/${SERVICE_NAME}" <<-EOF
		# This file is generated by ${WHO_AM_I}
		[Unit]
		SourcePath=${CONFIG_FILE}
		Description=proxy to ${PORT} (${PROTO})

		[Service]
		Type=notify
		ExecStart=/usr/lib/systemd/systemd-socket-proxyd 127.0.0.1:${PORT}
	EOF

	add_dep success.service requires "${FNAME}.socket"
	add_dep sockets.target wants "${FNAME}.socket"
	unset PROTO PORT NAME
done
